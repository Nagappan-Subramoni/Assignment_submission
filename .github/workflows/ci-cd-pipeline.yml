name: CI/CD Pipeline for Model Testing, Training, and Docker Deployment

on:
  push:
    branches:
      - main  # Runs on every push to main branch

jobs:

  # ðŸ”¥ Step 1: Run Tests First
  run_tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set Up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install Dependencies
        run: |
          pip install --upgrade pip
          pip install pyyaml scikit-learn pytest build pandas 

      - name: Run Tests
        working-directory: build_bikesharing/Application
        run: pytest tests/

  # ðŸ”¥ Step 2: Train, Build & Test (Runs Only If Step 1 Passes)
  train_build_test:
    runs-on: ubuntu-latest
    needs: run_tests  # This ensures it runs only if tests pass
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set Up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install Dependencies
        run: |
          pip install --upgrade pip
          pip install build

      - name: Run Training, Build, and Test
        working-directory: build_bikesharing/Application
        run: python -m build

      - name: Upload Built Package as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: built-package
          path: build_bikesharing/Application/dist/

  # ðŸ”¥ Step 3: Build and Push Docker Image (Runs Only If Build Passes)
  build_docker:
    runs-on: ubuntu-latest
    needs: train_build_test  # Runs only if Step 2 is successful
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Ensures all files and folders are present

      - name: Download Built Package
        uses: actions/download-artifact@v4
        with:
          name: built-package
          path: build_bikesharing/bike_sharing_api/

      - name: Log in to DockerHub
        run: echo "${{ secrets.DOCKER_ACCESS_TOKEN }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build Docker Image
        working-directory: build_bikesharing
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/bike_sharing_api:latest .

      - name: Push Docker Image to DockerHub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/bike_sharing_api:latest
